(fit.train1 <- train.kknn(class ~ ., ionosphere.learn, kmax = 15,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal"), distance = 1))
table(predict(fit.train1, ionosphere.valid), ionosphere.valid$class)
(fit.train2 <- train.kknn(class ~ ., ionosphere.learn, kmax = 15,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal"), distance = 2))
table(predict(fit.train2, ionosphere.valid), ionosphere.valid$class)
data(iris)
m <- dim(iris)[1]
val <- sample(1:m, size = round(m/3), replace = FALSE,
prob = rep(1/m, m))
#Splitting the data into train and test
iris.learn <- iris[-val,]
iris.valid <- iris[val,]
iris.kknn <- kknn(Species~., iris.learn, iris.valid, distance = 1,
kernel = "triangular")
summary(iris.kknn)
fit <- fitted(iris.kknn)
table(iris.valid$Species, fit)
pcol <- as.character(as.numeric(iris.valid$Species))
pairs(iris.valid[1:4], pch = pcol, col = c("green3", "red")
[(iris.valid$Species != fit)+1])
install.packages("car")
require(car)
scatterplotMatrix(iris)
# and
scatterplotMatrix(swiss)
scatterplotMatrix(iris)
# and
scatterplotMatrix(swiss)
require(lattice)
super.sym <- trellis.par.get("superpose.symbol")
splom(~iris[1:4], groups = Species, data = iris,
panel = panel.superpose,
key = list(title = "Three Varieties of Iris",
columns = 3,
points = list(pch = super.sym$pch[1:3],
col = super.sym$col[1:3]),
text = list(c("Setosa", "Versicolor", "Virginica"))))
splom(~iris[1:3]|Species, data = iris,
layout=c(2,2), pscales = 0,
varnames = c("Sepal\nLength", "Sepal\nWidth", "Petal\nLength"),
page = function(...) {
ltext(x = seq(.6, .8, length.out = 4),
y = seq(.9, .6, length.out = 4),
labels = c("Three", "Varieties", "of", "Iris"),
cex = 2)
})
splom(~iris[1:3]|Species, data = iris,
layout=c(2,2), pscales = 0,
varnames = c("Sepal\nLength", "Sepal\nWidth", "Petal\nLength"),
page = function(...) {
ltext(x = seq(.6, .8, length.out = 4),
y = seq(.9, .6, length.out = 4),
labels = c("Three", "Varieties", "of", "Iris"),
cex = 2)
})
parallelplot(~iris[1:4] | Species, iris)
pairs(iris[1:4], main = "Anderson's Iris Data -- 3 species",
pch = 21, bg = c("red", "green3", "blue")[unclass(iris$Species)])
pairs(iris[-5], log = "xy") # plot all variables on log scale
pairs(iris, log = 1:4, # log the first four
main = "Lengths and Widths in [log]", line.main=1.5, oma=c(2,2,3,2))
pairs(iris[1:4], main = "Anderson's Iris Data -- 3 species",
pch = 21, bg = c("red", "green3", "blue")[unclass(iris$Species)])
pairs(iris[-5], log = "xy") # plot all variables on log scale
pairs(iris, log = 1:4, # log the first four
main = "Lengths and Widths in [log]", line.main=1.5, oma=c(2,2,3,2))
## formula method
pairs(~ Fertility + Education + Catholic, data = swiss,
subset = Education < 20, main = "Swiss data, Education < 20")
pairs(USJudgeRatings)
## show only lower triangle (and suppress labeling for whatever reason):
pairs(USJudgeRatings, text.panel = NULL, upper.panel = NULL)
## put histograms on the diagonal
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
pairs(USJudgeRatings[1:5], panel = panel.smooth,
cex = 1.5, pch = 24, bg = "light blue",
diag.panel = panel.hist, cex.labels = 2, font.labels = 2)
## put (absolute) correlations on the upper panels,
## with size proportional to the correlations.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(USJudgeRatings, lower.panel = panel.smooth, upper.panel = panel.cor)
data("iris")
head(iris)
library(ggplot2)
library(e1071)
qplot(Petal.Length, Petal.Width, data=iris, color = species)
qplot(Petal.Length, Petal.Width, data=iris, color = Species)
library(ggplot2)
library(e1071)
svm_model1 <- svm(Species~., data=iris)
summary(svm_model1)
plot(svm_model1, data=iris, Petal.Width~Petal.Length,
slice=list(Sepal.Width=3, Sepal.Length=4))
pred1 <- predict(svm_model1, iris)
table1 <- table(Predicted = pred1, Actual = iris$Species)
table
table1
model1_accuracy = sum(diag(table1))/sum(table1)
model1_accuracy
model1_error <- 1 - model1_accuracy
model1_error
svm_model2 <- svm(Species~., data=iris, kernel = "linear")
summary(svm_model2)
summary(svm_model2)
plot(svm_model2, data=iris, Petal.Width~Petal.Length,
slice=list(Sepal.Width=3, Sepal.Length=4))
pred2 <- predict(svm_model2, iris)
table2 <- table(Predicted = pred2, Actual = iris$Species)
table2
model2_accuracy <- sum(diag(table2))/sum(table2)
model2_accuracy
model2_error <- 1 - model2_accuracy
model2_error
svm_model3 <- svm(Species~., data=iris, kernel = "polynomial")
summary(svm_model3)
plot(svm_model3, data=iris, Petal.Width~Petal.Length,
slice=list(Sepal.Width=3, Sepal.Length=5))
plot(svm_model3, data=iris, Petal.Width~Petal.Length,
slice=list(Sepal.Width=3, Sepal.Length=4))
pred3 <- predict(svm_model3, iris)
table3 <- table(Predicted = pred3, Actual = iris$Species)
summary(svm_model1)
summary(svm_model2)
table3 <- table(Predicted = pred3, Actual = iris$Species)
table3
model3_accuracy <- sum(diag(table3))/sum(table3)
model3_accuracy
model3_error <- 1 - model3_accuracy
model3_error
help(svm)
coef(svm_model2)
coef(svm_model1)
# Working on Desktop
setwd("C:/Users/Naran/Data-Analytics-Project-6000/Data Analytics Project/Income Data")
Income_data_ACS_2010 <- read.csv("ACSST1Y2010.S1901-Data.csv", skip=1)
Income_data_ACS_2011 <- read.csv("ACSST1Y2011.S1901-Data.csv", skip=1)
Income_data_ACS_2012 <- read.csv("ACSST1Y2012.S1901-Data.csv", skip=1)
Income_data_ACS_2013 <- read.csv("ACSST1Y2013.S1901-Data.csv", skip=1)
Income_data_ACS_2014 <- read.csv("ACSST1Y2014.S1901-Data.csv", skip=1)
Income_data_ACS_2015 <- read.csv("ACSST1Y2015.S1901-Data.csv", skip=1)
Income_data_ACS_2016 <- read.csv("ACSST1Y2016.S1901-Data.csv", skip=1)
Income_data_ACS_2017 <- read.csv("ACSST1Y2017.S1901-Data.csv", skip=1)
Income_data_ACS_2018 <- read.csv("ACSST1Y2018.S1901-Data.csv", skip=1)
Income_data_ACS_2019 <- read.csv("ACSST1Y2019.S1901-Data.csv", skip=1)
Income_data_ACS_2021 <- read.csv("ACSST1Y2021.S1901-Data.csv", skip=1)
return_subset_by_state <- function(df, state){
subset_df <- df[grep(state, df$Geographic.Area.Name), ]
return (subset_df)
}
remove_nas <- function(df, Null) {
totalRows <- nrow(df)
print(totalRows)
index = c()
for ( i in colnames(df) ){
found = nrow(df[df[[i]] == Null, ])
if(found >= totalRows*0.5){
index <- append(index, c(FALSE))
}
else{ index <- append(index, c(TRUE))}
}
return(index)
}
#Removing Null Values Based On if There are more than 50, "NULL" values
# entry in the estimate and margin of error columns indicates that data for this geographic area cannot be displayed because the number of sample cases is too small
Income_data_ACS_2010 <- Income_data_ACS_2010[, remove_nas(Income_data_ACS_2010, "null")]
Income_data_ACS_2011 <- Income_data_ACS_2011[, remove_nas(Income_data_ACS_2011, "null")]
Income_data_ACS_2012 <- Income_data_ACS_2012[, remove_nas(Income_data_ACS_2012, "null")]
Income_data_ACS_2013 <- Income_data_ACS_2013[, remove_nas(Income_data_ACS_2013, "null")]
Income_data_ACS_2014 <- Income_data_ACS_2014[, remove_nas(Income_data_ACS_2014, "null")]
Income_data_ACS_2015 <- Income_data_ACS_2015[, remove_nas(Income_data_ACS_2015, "null")]
Income_data_ACS_2016 <- Income_data_ACS_2016[, remove_nas(Income_data_ACS_2016, "null")]
Income_data_ACS_2017 <- Income_data_ACS_2017[, remove_nas(Income_data_ACS_2017, "null")]
Income_data_ACS_2018 <- Income_data_ACS_2018[, remove_nas(Income_data_ACS_2018, "null")]
Income_data_ACS_2019 <- Income_data_ACS_2019[, remove_nas(Income_data_ACS_2019, "null")]
Income_data_ACS_2021 <- Income_data_ACS_2021[, remove_nas(Income_data_ACS_2021, "null")]
Household_2018 <- Income_data_ACS_2018[, household_features ]
houeshold_features <- c("Households..Estimate..Total",
"Households..Estimate..Less.than..10.000",
"Households..Estimate...10.000.to..14.999",
"Households..Estimate...15.000.to..24.999",
"Households..Estimate...25.000.to..34.999",
"Households..Estimate...35.000.to..49.999",
"Households..Estimate...50.000.to..74.999",
"Households..Estimate...75.000.to..99.999",
"Households..Estimate...100.000.to..149.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...200.000.or.more")
Household_2018 <- Income_data_ACS_2018[, household_features ]
household_features <- c("Households..Estimate..Total",
"Households..Estimate..Less.than..10.000",
"Households..Estimate...10.000.to..14.999",
"Households..Estimate...15.000.to..24.999",
"Households..Estimate...25.000.to..34.999",
"Households..Estimate...35.000.to..49.999",
"Households..Estimate...50.000.to..74.999",
"Households..Estimate...75.000.to..99.999",
"Households..Estimate...100.000.to..149.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...200.000.or.more")
Household_2018 <- Income_data_ACS_2018[, household_features ]
Household_2018 <- Income_data_ACS_2018[,household_features ]
Household_2018 <- Income_data_ACS_2018[household_features, ]
View(Household_2018)
Income_data_ACS_2018 <- Income_data_ACS_2018[, remove_nas(Income_data_ACS_2018, "null")]
View(Income_data_ACS_2018)
Household_2018 <- Income_data_ACS_2018[household_features, ]
View(Household_2018)
Household_2018 <- Income_data_ACS_2018[, household_features]
Household_2018 <- Income_data_ACS_2018[, c("Households..Estimate..Total",
"Households..Estimate..Less.than..10.000",
"Households..Estimate...10.000.to..14.999",
"Households..Estimate...15.000.to..24.999",
"Households..Estimate...25.000.to..34.999",
"Households..Estimate...35.000.to..49.999",
"Households..Estimate...50.000.to..74.999",
"Households..Estimate...75.000.to..99.999",
"Households..Estimate...100.000.to..149.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...200.000.or.more")]
View(Income_data_ACS_2018)
Household_2018 <- Income_data_ACS_2018[, c("Estimate..Households..Total",
"Households..Estimate..Less.than..10.000",
"Households..Estimate...10.000.to..14.999",
"Households..Estimate...15.000.to..24.999",
"Households..Estimate...25.000.to..34.999",
"Households..Estimate...35.000.to..49.999",
"Households..Estimate...50.000.to..74.999",
"Households..Estimate...75.000.to..99.999",
"Households..Estimate...100.000.to..149.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...200.000.or.more")]
colnames(Income_data_ACS_2018)
Household_2018 <- Income_data_ACS_2018[, c("Estimate..Households..Total",
"Estimate..Households..Less.than..10.000",
"Estimate..Households...10.000.to..14.999",
"Estimate..Households...15.000.to..24.999",
"Estimate..Households...25.000.to..34.999",
"Estimate..Households...35.000.to..49.999",
"Estimate..Households...50.000.to..74.999",
"Estimate..Households...75.000.to..99.999",
"Estimate..Households...100.000.to..149.999",
"Estimate..Households...150.000.to..199.999",
"Estimate..Households...150.000.to..199.999",
"Estimate..Households...200.000.or.more")]
Household_2018 <- Income_data_ACS_2018[, c("Estimate..Households..Total",
"Estimate..Households..Less.than..10.000",
"Estimate..Households...10.000.to..14.999",
"Estimate..Households...15.000.to..24.999",
"Estimate..Households...25.000.to..34.999",
"Estimate..Households...35.000.to..49.999",
"Estimate..Households...50.000.to..74.999",
"Estimate..Households...75.000.to..99.999",
"Estimate..Households...100.000.to..149.999",
"Estimate..Households...150.000.to..199.999",
"Estimate..Households...150.000.to..199.999",
"Estimate..Households...200.000.or.more") ]
Household_2018 <- Income_data_ACS_2018[, c("Estimate..Households..Total",
"Estimate..Households..Less.than..10.000") ]
Household_2018 <- Income_data_ACS_2018[, c("Estimate..Households..Total"
) ]
Household_2018 <- Income_data_ACS_2018[, c("Estimate..Households..Total") ]
Household_2018 <- data.frame(Income_data_ACS_2018[, c("Estimate..Households..Total") ])
View(Household_2018)
feature_names_updated <- c("Estimate..Households..Total",
"Estimate..Households..Less.than..10.000",
"Estimate..Households...10.000.to..14.999",
"Estimate..Households...15.000.to..24.999",
"Estimate..Households...25.000.to..34.999",
"Estimate..Households...35.000.to..49.999",
"Estimate..Households...50.000.to..74.999",
"Estimate..Households...75.000.to..99.999",
"Estimate..Households...100.000.to..149.999",
"Estimate..Households...150.000.to..199.999",
"Estimate..Households...150.000.to..199.999",
"Estimate..Households...200.000.or.more")
idx <- match(feature_names_updated, names(Income_data_ACS_2018))
Household_2018 <-Income_data_ACS_2018[, idx]
idx
feature_names_updated <- c("Estimate..Households..Total",
"Estimate..Households..Total..Less..than..10.000",
"Estimate..Households..Total...10.000.to..14.999",
"Estimate..Households..Total...15.000.to..24.999",
"Estimate..Households..Total...25.000.to..34.999",
"Estimate..Households..Total...35.000.to..49.999",
"Estimate..Households..Total...50.000.to..74.999",
"Estimate..Households..Total...75.000.to..99.999",
"Estimate..Households..Total...100.000.to..149.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...200.000.or.more")
idx <- match(feature_names_updated, names(Income_data_ACS_2018))
idx
feature_names_updated <- c("Estimate..Households..Total",
"Estimate..Households..Total..Less.than..10.000",
"Estimate..Households..Total...10.000.to..14.999",
"Estimate..Households..Total...15.000.to..24.999",
"Estimate..Households..Total...25.000.to..34.999",
"Estimate..Households..Total...35.000.to..49.999",
"Estimate..Households..Total...50.000.to..74.999",
"Estimate..Households..Total...75.000.to..99.999",
"Estimate..Households..Total...100.000.to..149.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...200.000.or.more")
idx <- match(feature_names_updated, names(Income_data_ACS_2018))
idx
Household_2018 <-Income_data_ACS_2018[, idx]
View(Household_2018)
View(Household_2018)
feature_names_updated <- c("Geographic.Area.Name",
"Estimate..Households..Total",
"Estimate..Households..Total..Less.than..10.000",
"Estimate..Households..Total...10.000.to..14.999",
"Estimate..Households..Total...15.000.to..24.999",
"Estimate..Households..Total...25.000.to..34.999",
"Estimate..Households..Total...35.000.to..49.999",
"Estimate..Households..Total...50.000.to..74.999",
"Estimate..Households..Total...75.000.to..99.999",
"Estimate..Households..Total...100.000.to..149.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...200.000.or.more")
idx <- match(feature_names_updated, names(Income_data_ACS_2018))
idx
Household_2018 <-Income_data_ACS_2018[, idx]
View(Household_2018)
Household_2019 <- Income_data_ACS_2019[, idx ]
#### California  ####
california_2018_household <- mean(return_subset_by_state(Household_2018, "California"))
feature_names_updated <- c("Estimate..Households..Total",
"Estimate..Households..Total..Less.than..10.000",
"Estimate..Households..Total...10.000.to..14.999",
"Estimate..Households..Total...15.000.to..24.999",
"Estimate..Households..Total...25.000.to..34.999",
"Estimate..Households..Total...35.000.to..49.999",
"Estimate..Households..Total...50.000.to..74.999",
"Estimate..Households..Total...75.000.to..99.999",
"Estimate..Households..Total...100.000.to..149.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...200.000.or.more")
idx <- match(feature_names_updated, names(Income_data_ACS_2018))
idx
Household_2018 <-Income_data_ACS_2018[, idx ]
Household_2019 <- Income_data_ACS_2019[, idx ]
Household_2021 <- Income_data_ACS_2021[, idx ]
#### California  ####
california_2018_household <- colMeans(return_subset_by_state(Household_2018, "California"))
california_2018_household
#### California  ####
str(Household_2018)
california_2018_household <- colMeans(return_subset_by_state(Household_2018, "California"))
california_2018_household
california_2018_household <- return_subset_by_state(Household_2018, "California")
california_2018_household
View(california_2018_household)
california_2018_household <- return_subset_by_state(Household_2018, "California")
View(california_2018_household)
Household_2018 <-Income_data_ACS_2018[, idx ]
View(Household_2018)
california_2018_household <- return_subset_by_state(Household_2018, "California")
View(california_2018_household)
household_features <- c("Geographic.Area.Name",
"Households..Estimate..Less.than..10.000",
household_features <- c("Geographic.Area.Name",
"Households..Estimate..Total",
"Households..Estimate..Less.than..10.000",
"Households..Estimate...10.000.to..14.999",
"Households..Estimate...15.000.to..24.999",
"Households..Estimate...25.000.to..34.999",
"Households..Estimate...35.000.to..49.999",
"Households..Estimate...50.000.to..74.999",
"Households..Estimate...75.000.to..99.999",
"Households..Estimate...100.000.to..149.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...200.000.or.more")
colnames(Income_data_ACS_2018)
household_features <- c("Geographic.Area.Name",
"Households..Estimate..Total",
"Households..Estimate..Less.than..10.000",
"Households..Estimate...10.000.to..14.999",
"Households..Estimate...15.000.to..24.999",
"Households..Estimate...25.000.to..34.999",
"Households..Estimate...35.000.to..49.999",
"Households..Estimate...50.000.to..74.999",
"Households..Estimate...75.000.to..99.999",
"Households..Estimate...100.000.to..149.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...200.000.or.more")
colnames(Income_data_ACS_2018)
feature_names_updated <- c("Estimate..Households..Total",
"Estimate..Households..Total..Less.than..10.000",
"Estimate..Households..Total...10.000.to..14.999",
"Estimate..Households..Total...15.000.to..24.999",
"Estimate..Households..Total...25.000.to..34.999",
"Estimate..Households..Total...35.000.to..49.999",
"Estimate..Households..Total...50.000.to..74.999",
"Estimate..Households..Total...75.000.to..99.999",
"Estimate..Households..Total...100.000.to..149.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...200.000.or.more")
idx <- match(feature_names_updated, names(Income_data_ACS_2018))
idx
Household_2018 <-Income_data_ACS_2018[, idx ]
Household_2019 <- Income_data_ACS_2019[, idx ]
Household_2021 <- Income_data_ACS_2021[, idx ]
california_2018_household <- return_subset_by_state(Household_2018, "California")
View(california_2018_household)
View(Household_2018)
Income_data_ACS_2018 <- read.csv("ACSST1Y2018.S1901-Data.csv", skip=1)
Income_data_ACS_2019 <- read.csv("ACSST1Y2019.S1901-Data.csv", skip=1)
Income_data_ACS_2021 <- read.csv("ACSST1Y2021.S1901-Data.csv", skip=1)
Income_data_ACS_2018 <- Income_data_ACS_2018[, remove_nas(Income_data_ACS_2018, "null")]
Income_data_ACS_2019 <- Income_data_ACS_2019[, remove_nas(Income_data_ACS_2019, "null")]
Income_data_ACS_2021 <- Income_data_ACS_2021[, remove_nas(Income_data_ACS_2021, "null")]
household_features <- c("Geographic.Area.Name",
"Households..Estimate..Total",
"Households..Estimate..Less.than..10.000",
"Households..Estimate...10.000.to..14.999",
"Households..Estimate...15.000.to..24.999",
"Households..Estimate...25.000.to..34.999",
"Households..Estimate...35.000.to..49.999",
"Households..Estimate...50.000.to..74.999",
"Households..Estimate...75.000.to..99.999",
"Households..Estimate...100.000.to..149.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...150.000.to..199.999",
"Households..Estimate...200.000.or.more")
colnames(Income_data_ACS_2018)
feature_names_updated <- c("Estimate..Households..Total",
"Estimate..Households..Total..Less.than..10.000",
"Estimate..Households..Total...10.000.to..14.999",
"Estimate..Households..Total...15.000.to..24.999",
"Estimate..Households..Total...25.000.to..34.999",
"Estimate..Households..Total...35.000.to..49.999",
"Estimate..Households..Total...50.000.to..74.999",
"Estimate..Households..Total...75.000.to..99.999",
"Estimate..Households..Total...100.000.to..149.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...200.000.or.more")
feature_names_updated <- c("Geographic.Area.Name",
"Estimate..Households..Total",
"Estimate..Households..Total..Less.than..10.000",
"Estimate..Households..Total...10.000.to..14.999",
"Estimate..Households..Total...15.000.to..24.999",
"Estimate..Households..Total...25.000.to..34.999",
"Estimate..Households..Total...35.000.to..49.999",
"Estimate..Households..Total...50.000.to..74.999",
"Estimate..Households..Total...75.000.to..99.999",
"Estimate..Households..Total...100.000.to..149.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...150.000.to..199.999",
"Estimate..Households..Total...200.000.or.more")
idx <- match(feature_names_updated, names(Income_data_ACS_2018))
idx
Household_2018 <-Income_data_ACS_2018[, idx ]
Household_2019 <- Income_data_ACS_2019[, idx ]
Household_2021 <- Income_data_ACS_2021[, idx ]
california_2018_household <- return_subset_by_state(Household_2018, "California")
View(california_2018_household)
california_2018_household <- california_2018_household[, -c(1)]
View(california_2018_household)
california_avg <- colMeans(california_2018_household)
california_avg
#### California  ####
library(ggplot2)
str(california_avg)
california_avg[0]
california_avg[1]
california_avg[2]
california_avg[2][1]
mtx <- matrix(1:2, ncol = 12, dimanmes = list(NULL, paste0('V', 1:12)))
mtx <- matrix(1:2, ncol = 12, dimnames = list(NULL, paste0('V', 1:12)))
dim(california_2018_household)
as.data.frame.list(california_2018_household)
mtx <- matrix(1:40, ncol = 12, dimnames = list(NULL, paste0('V', 1:12)))
mtx <- colMeans(california_2018_household)
california_2018_household <- return_subset_by_state(Household_2018, "California")
california_2018_household <- california_2018_household[, -c(1)]
View(california_2018_household)
col_means <- colMeans(california_2018_household[pase0("Q", 1:40)])
col_means <- colMeans(california_2018_household[paste0("Q", 1:40)])
col_means <- colMeans(california_2018_household[paste0("Q", 1:12)])
View(california_2018_household)
col_means <- colMeans(california_2018_household[paste0("Q", 1:12)])
col_means
